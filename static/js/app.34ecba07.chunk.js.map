{"version":3,"sources":["App.js","web-build/register-service-worker.js"],"names":["App","props","state","resultText","calculationText","operations","text","this","setState","eval","slice","validate","calculateResult","operation","split","pop","join","lastChar","indexOf","rows","nums","i","row","j","push","key","onPress","buttonPressed","style","styles","btn","btnText","ops","operate","white","container","result","calculator","buttons","numbers","React","Component","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","fontSize","color","alignSelf","backgroundColor","marginRight","marginTop","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.34ecba07.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resultText: '',\n      calculationText: ''\n    }   \n    this.operations = ['DEL', '+', '-', '*', '/'];\n  }\n\n  calculateResult() {\n    const text = this.state.resultText;\n    this.setState({\n      calculationText: eval(text) \n    })\n  }\n\n  validate() {\n    const text = this.state.resultText;\n    switch(text.slice(-1)) {\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n        return false\n    }\n        return true\n  }\n\n  buttonPressed(text) {\n    if(text == '='){\n      return this.validate() && this.calculateResult(this.state.resultText)\n    }\n\n    this.setState({\n      resultText: this.state.resultText+text\n    })\n  }\n\n  operate(operation) {\n    switch(operation) {\n      case 'DEL':\n       let text = this.state.resultText.split('')\n       text.pop()\n       this.setState({\n         resultText: text.join('')\n       });\n       break;\n      case '+':\n      case '-':\n      case '*':\n      case '/':\n         const lastChar = this.state.resultText.split('').pop();\n\n         if(this.operations.indexOf(lastChar) > 0) return\n\n        if(this.state.resultText == '') {\n          return this.setState({\n          resultText: ''\n       })\n    }\n      return this.setState({\n        resultText: this.state.resultText + operation\n      })\n    }\n  }\n\n  render() {\n    let rows = [];\n    let nums = [[1,2,3], [4,5,6], [7,8,9], ['.',0,'=']]\n      for(let i=0; i<4; i++) {\n        let row = [];\n          for(let j=0; j<3; j++) {\n            row.push(<TouchableOpacity key={nums[i][j]} onPress={() => this.buttonPressed(nums[i][j])} style={styles.btn}>\n              <Text style={styles.btnText}>{nums[i][j]}</Text>\n            </TouchableOpacity>)\n          }\n        rows.push(<View key={i} style={styles.row}>{row}</View>)\n      }\n\n\n    let ops = [];\n    for(let i=0; i<5; i++) {\n      ops.push(<TouchableOpacity key={this.operations[i]} onPress={() => this.operate(this.operations[i])} style={styles.btn}>\n        <Text style={[styles.btnText, styles.white]}>{this.operations[i]}</Text>\n      </TouchableOpacity>)\n    }\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.result}>\n          <Text style={styles.resultText}>{this.state.resultText}</Text>\n        </View>\n        <View style={styles.calculator}>\n          <Text style={styles.calculationText}>{this.state.calculationText}</Text>\n        </View>\n        <View style={styles.buttons}>\n          <View style={styles.numbers}>\n            {rows}\n          </View>\n          <View style={styles.operations}>\n             {ops}\n          </View>  \n        </View>      \n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  row: {\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  resultText: {\n    fontSize: 35,\n    color: 'black'\n  },\n  calculationText: {\n    fontSize: 50,\n    color: 'black'\n  },\n  btn: {\n    flex: 1,\n    alignSelf: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btnText: {\n    fontSize: 30,\n    color: 'white'\n  },\n  white: {\n    color: 'white'\n  },\n  result:{\n    flex: 2,\n    backgroundColor: 'white',\n    alignItems: 'flex-end',\n    marginRight: 20,\n    marginTop: 70,\n  },\n  calculator: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'flex-end',\n   marginRight: 20\n  },\n  buttons: {\n    flex: 7,\n    flexDirection: 'row' \n  },\n  numbers: {\n    flex: 3,\n    backgroundColor: '#434343'\n  },\n  operations: {\n    flex: 1,\n    backgroundColor: '#636363',\n    justifyContent: 'space-around'\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/React-Native-calculator/expo-service-worker.js', { scope: '/React-Native-calculator/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}